// Generated by view binder compiler. Do not edit!
package com.cs2340.towerjackets.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cs2340.towerjackets.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GameScreenBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final ImageView grassBackground;

  @NonNull
  public final TextView hpT;

  @NonNull
  public final TextView hpV;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView moneyT;

  @NonNull
  public final TextView moneyV;

  @NonNull
  public final ImageView path;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final ImageButton towerMenuB;

  @NonNull
  public final Button towerOneB;

  @NonNull
  public final TextView towerOneT;

  @NonNull
  public final TextView towerOneV;

  @NonNull
  public final Button towerThreeB;

  @NonNull
  public final TextView towerThreeT;

  @NonNull
  public final TextView towerThreeV;

  @NonNull
  public final Button towerTwoB;

  @NonNull
  public final TextView towerTwoT;

  @NonNull
  public final TextView towerTwoV;

  private GameScreenBinding(@NonNull RelativeLayout rootView, @NonNull View divider,
      @NonNull ImageView grassBackground, @NonNull TextView hpT, @NonNull TextView hpV,
      @NonNull ImageView imageView, @NonNull TextView moneyT, @NonNull TextView moneyV,
      @NonNull ImageView path, @NonNull RelativeLayout relativeLayout, @NonNull TextView textView,
      @NonNull TextView textView6, @NonNull ImageButton towerMenuB, @NonNull Button towerOneB,
      @NonNull TextView towerOneT, @NonNull TextView towerOneV, @NonNull Button towerThreeB,
      @NonNull TextView towerThreeT, @NonNull TextView towerThreeV, @NonNull Button towerTwoB,
      @NonNull TextView towerTwoT, @NonNull TextView towerTwoV) {
    this.rootView = rootView;
    this.divider = divider;
    this.grassBackground = grassBackground;
    this.hpT = hpT;
    this.hpV = hpV;
    this.imageView = imageView;
    this.moneyT = moneyT;
    this.moneyV = moneyV;
    this.path = path;
    this.relativeLayout = relativeLayout;
    this.textView = textView;
    this.textView6 = textView6;
    this.towerMenuB = towerMenuB;
    this.towerOneB = towerOneB;
    this.towerOneT = towerOneT;
    this.towerOneV = towerOneV;
    this.towerThreeB = towerThreeB;
    this.towerThreeT = towerThreeT;
    this.towerThreeV = towerThreeV;
    this.towerTwoB = towerTwoB;
    this.towerTwoT = towerTwoT;
    this.towerTwoV = towerTwoV;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GameScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GameScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.game_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GameScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.grassBackground;
      ImageView grassBackground = ViewBindings.findChildViewById(rootView, id);
      if (grassBackground == null) {
        break missingId;
      }

      id = R.id.hpT;
      TextView hpT = ViewBindings.findChildViewById(rootView, id);
      if (hpT == null) {
        break missingId;
      }

      id = R.id.hpV;
      TextView hpV = ViewBindings.findChildViewById(rootView, id);
      if (hpV == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.moneyT;
      TextView moneyT = ViewBindings.findChildViewById(rootView, id);
      if (moneyT == null) {
        break missingId;
      }

      id = R.id.moneyV;
      TextView moneyV = ViewBindings.findChildViewById(rootView, id);
      if (moneyV == null) {
        break missingId;
      }

      id = R.id.path;
      ImageView path = ViewBindings.findChildViewById(rootView, id);
      if (path == null) {
        break missingId;
      }

      RelativeLayout relativeLayout = (RelativeLayout) rootView;

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.towerMenuB;
      ImageButton towerMenuB = ViewBindings.findChildViewById(rootView, id);
      if (towerMenuB == null) {
        break missingId;
      }

      id = R.id.towerOneB;
      Button towerOneB = ViewBindings.findChildViewById(rootView, id);
      if (towerOneB == null) {
        break missingId;
      }

      id = R.id.towerOneT;
      TextView towerOneT = ViewBindings.findChildViewById(rootView, id);
      if (towerOneT == null) {
        break missingId;
      }

      id = R.id.towerOneV;
      TextView towerOneV = ViewBindings.findChildViewById(rootView, id);
      if (towerOneV == null) {
        break missingId;
      }

      id = R.id.towerThreeB;
      Button towerThreeB = ViewBindings.findChildViewById(rootView, id);
      if (towerThreeB == null) {
        break missingId;
      }

      id = R.id.towerThreeT;
      TextView towerThreeT = ViewBindings.findChildViewById(rootView, id);
      if (towerThreeT == null) {
        break missingId;
      }

      id = R.id.towerThreeV;
      TextView towerThreeV = ViewBindings.findChildViewById(rootView, id);
      if (towerThreeV == null) {
        break missingId;
      }

      id = R.id.towerTwoB;
      Button towerTwoB = ViewBindings.findChildViewById(rootView, id);
      if (towerTwoB == null) {
        break missingId;
      }

      id = R.id.towerTwoT;
      TextView towerTwoT = ViewBindings.findChildViewById(rootView, id);
      if (towerTwoT == null) {
        break missingId;
      }

      id = R.id.towerTwoV;
      TextView towerTwoV = ViewBindings.findChildViewById(rootView, id);
      if (towerTwoV == null) {
        break missingId;
      }

      return new GameScreenBinding((RelativeLayout) rootView, divider, grassBackground, hpT, hpV,
          imageView, moneyT, moneyV, path, relativeLayout, textView, textView6, towerMenuB,
          towerOneB, towerOneT, towerOneV, towerThreeB, towerThreeT, towerThreeV, towerTwoB,
          towerTwoT, towerTwoV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
